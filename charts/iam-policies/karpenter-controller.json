{
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "AllowScopedEC2InstanceAccessActions",
        "Effect": "Allow",
        "Resource": [
          "arn:{{ partitionId }}:ec2:{{ regionId }}::snapshot/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:security-group/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:subnet/*"
        ],
        "Action": [
          "ec2:RunInstances",
          "ec2:CreateFleet"
        ]
      },
      {
        "Sid": "AllowScopedEC2LaunchTemplateAccessActions",
        "Effect": "Allow",
        "Resource": "arn:{{ partitionId }}:ec2:{{ regionId }}:*:launch-template/*",
        "Action": [
          "ec2:RunInstances",
          "ec2:CreateFleet"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/kubernetes.io/cluster/{{ clusterName }}": "owned"
          },
          "StringLike": {
            "aws:ResourceTag/karpenter.sh/nodepool": "*"
          }
        }
      },
      {
        "Sid": "AllowScopedEC2InstanceActionsWithTags",
        "Effect": "Allow",
        "Resource": [
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:fleet/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:instance/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:volume/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:network-interface/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:launch-template/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:spot-instances-request/*"
        ],
        "Action": [
          "ec2:RunInstances",
          "ec2:CreateFleet",
          "ec2:CreateLaunchTemplate"
        ],
        "Condition": {
          "StringEquals": {
            "aws:RequestTag/kubernetes.io/cluster/{{ clusterName }}": "owned",
            "aws:RequestTag/eks:eks-cluster-name": "{{ clusterName }}"
          },
          "StringLike": {
            "aws:RequestTag/karpenter.sh/nodepool": "*"
          }
        }
      },
      {
        "Sid": "AllowScopedResourceCreationTagging",
        "Effect": "Allow",
        "Resource": [
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:fleet/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:instance/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:volume/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:network-interface/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:launch-template/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:spot-instances-request/*"
        ],
        "Action": "ec2:CreateTags",
        "Condition": {
          "StringEquals": {
            "aws:RequestTag/kubernetes.io/cluster/{{ clusterName }}": "owned",
            "aws:RequestTag/eks:eks-cluster-name": "{{ clusterName }}",
            "ec2:CreateAction": [
              "RunInstances",
              "CreateFleet",
              "CreateLaunchTemplate"
            ]
          },
          "StringLike": {
            "aws:RequestTag/karpenter.sh/nodepool": "*"
          }
        }
      },
      {
        "Sid": "AllowScopedResourceTagging",
        "Effect": "Allow",
        "Resource": "arn:{{ partitionId }}:ec2:{{ regionId }}:*:instance/*",
        "Action": "ec2:CreateTags",
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/kubernetes.io/cluster/{{ clusterName }}": "owned"
          },
          "StringLike": {
            "aws:ResourceTag/karpenter.sh/nodepool": "*"
          },
          "StringEqualsIfExists": {
            "aws:RequestTag/eks:eks-cluster-name": "{{ clusterName }}"
          },
          "ForAllValues:StringEquals": {
            "aws:TagKeys": [
              "eks:eks-cluster-name",
              "karpenter.sh/nodeclaim",
              "Name"
            ]
          }
        }
      },
      {
        "Sid": "AllowScopedDeletion",
        "Effect": "Allow",
        "Resource": [
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:instance/*",
          "arn:{{ partitionId }}:ec2:{{ regionId }}:*:launch-template/*"
        ],
        "Action": [
          "ec2:TerminateInstances",
          "ec2:DeleteLaunchTemplate"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/kubernetes.io/cluster/{{ clusterName }}": "owned"
          },
          "StringLike": {
            "aws:ResourceTag/karpenter.sh/nodepool": "*"
          }
        }
      },
      {
        "Sid": "AllowReadActions",
        "Effect": "Allow",
        "Resource": "*",
        "Action": [
          "ec2:DescribeImages",
          "ec2:DescribeInstances",
          "ec2:DescribeInstanceTypeOfferings",
          "ec2:DescribeInstanceTypes",
          "ec2:DescribeLaunchTemplates",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSpotPriceHistory",
          "ec2:DescribeSubnets"
        ]
      },
      {
        "Sid": "AllowSSMReadActions",
        "Effect": "Allow",
        "Resource": "arn:{{ partitionId }}:ssm:{{ regionId }}::parameter/aws/service/*",
        "Action": "ssm:GetParameter"
      },
      {
        "Sid": "AllowPricingReadActions",
        "Effect": "Allow",
        "Resource": "*",
        "Action": "pricing:GetProducts"
      },
      {
        "Sid": "AllowInterruptionQueueActions",
        "Effect": "Allow",
        "Resource": "{{ interruptionQueueArn }}",
        "Action": [
          "sqs:DeleteMessage",
          "sqs:GetQueueUrl",
          "sqs:ReceiveMessage"
        ]
      },
      {
        "Sid": "AllowPassingInstanceRole",
        "Effect": "Allow",
        "Resource": "{{ nodeRoleArn }}",
        "Action": "iam:PassRole",
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": [
              "ec2.amazonaws.com",
              "ec2.amazonaws.com.cn"
            ]
          }
        }
      },
      {
        "Sid": "AllowScopedInstanceProfileCreationActions",
        "Effect": "Allow",
        "Resource": "arn:{{ partitionId }}:iam::{{ accountId }}:instance-profile/*",
        "Action": [
          "iam:CreateInstanceProfile"
        ],
        "Condition": {
          "StringEquals": {
            "aws:RequestTag/kubernetes.io/cluster/{{ clusterName }}": "owned",
            "aws:RequestTag/eks:eks-cluster-name": "{{ clusterName }}",
            "aws:RequestTag/topology.kubernetes.io/region": "{{ regionId }}"
          },
          "StringLike": {
            "aws:RequestTag/karpenter.k8s.aws/ec2nodeclass": "*"
          }
        }
      },
      {
        "Sid": "AllowScopedInstanceProfileTagActions",
        "Effect": "Allow",
        "Resource": "arn:{{ partitionId }}:iam::{{ accountId }}:instance-profile/*",
        "Action": [
          "iam:TagInstanceProfile"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/kubernetes.io/cluster/{{ clusterName }}": "owned",
            "aws:ResourceTag/topology.kubernetes.io/region": "{{ regionId }}",
            "aws:RequestTag/kubernetes.io/cluster/{{ clusterName }}": "owned",
            "aws:RequestTag/eks:eks-cluster-name": "{{ clusterName }}",
            "aws:RequestTag/topology.kubernetes.io/region": "{{ regionId }}"
          },
          "StringLike": {
            "aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass": "*",
            "aws:RequestTag/karpenter.k8s.aws/ec2nodeclass": "*"
          }
        }
      },
      {
        "Sid": "AllowScopedInstanceProfileActions",
        "Effect": "Allow",
        "Resource": "arn:{{ partitionId }}:iam::{{ accountId }}:instance-profile/*",
        "Action": [
          "iam:AddRoleToInstanceProfile",
          "iam:RemoveRoleFromInstanceProfile",
          "iam:DeleteInstanceProfile"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/kubernetes.io/cluster/{{ clusterName }}": "owned",
            "aws:ResourceTag/topology.kubernetes.io/region": "{{ regionId }}"
          },
          "StringLike": {
            "aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass": "*"
          }
        }
      },
      {
        "Sid": "AllowInstanceProfileReadActions",
        "Effect": "Allow",
        "Resource": "arn:{{ partitionId }}:iam::{{ accountId }}:instance-profile/*",
        "Action": "iam:GetInstanceProfile"
      },
      {
        "Sid": "AllowAPIServerEndpointDiscovery",
        "Effect": "Allow",
        "Resource": "arn:{{ partitionId }}:eks:{{ regionId }}:{{ accountId }}:cluster/{{ clusterName }}",
        "Action": "eks:DescribeCluster"
      }
    ]
  }